{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","props","id","value","placeholder","onChange","name","errors","htmlFor","cn","length","type","NewMovie","state","moviesFromServer","handleChange","event","target","replace","setState","clearInputs","onAdd","preventDefault","newMovie","pattern","RegExp","prevState","validation","test","addMovie","this","onSubmit","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b64733ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport '../../App.scss';\n\nexport const Input = (props) => {\n  const {\n    id,\n    value,\n    placeholder,\n    onChange,\n    name,\n    errors,\n  } = props;\n\n  return (\n    <div className=\"control inputWrapper\">\n      <label htmlFor={id} className=\"label\">{name}</label>\n      <input\n        id={id}\n        name={name}\n        className={cn('input', { 'is-danger': errors && value.length < 3 })}\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {errors && (\n        <p className=\"help is-danger\">\n          {`This ${name} is invalid`}\n        </p>\n      )}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  errors: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  errors: false,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from './Input';\nimport moviesFromServer from '../../api/movies.json';\n\nexport class NewMovie extends Component {\n  state = {\n    movies: moviesFromServer,\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleChange = (event) => {\n    const regExp = /^\\s/;\n    const title = event.target.value.replace(regExp, '');\n\n    this.setState({\n      [event.target.name]: title,\n    });\n  }\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n    });\n  }\n\n  onAdd = (event) => {\n    event.preventDefault();\n    const {\n      movies,\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie = {\n      movies,\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    // eslint-disable-next-line max-len\n    const pattern = new RegExp(`^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$`);\n\n    this.setState((prevState) => {\n      const validation = {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      };\n\n      if (title === '') {\n        validation.title = true;\n      }\n\n      if (imgUrl === '' || !pattern.test(imgUrl)) {\n        validation.imgUrl = true;\n      }\n\n      if (imdbUrl === '' || !pattern.test(imdbUrl)) {\n        validation.imdbUrl = true;\n      }\n\n      if (imdbId === '') {\n        validation.imdbId = true;\n      }\n\n      return {\n        errors: {\n          ...validation,\n        },\n      };\n    });\n\n    if (title && (pattern.test(imgUrl))\n      && (pattern.test(imdbUrl)) && imdbId) {\n      this.props.addMovie(newMovie);\n      this.clearInputs();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onAdd}>\n        <Input\n          id=\"title\"\n          value={title}\n          placeholder=\"Enter Movie title\"\n          name=\"title\"\n          onChange={this.handleChange}\n          errors={errors.title}\n        />\n        <Input\n          id=\"description\"\n          value={description}\n          placeholder=\"Enter description\"\n          name=\"description\"\n          onChange={this.handleChange}\n        />\n        <Input\n          id=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Enter imgUrl\"\n          name=\"imgUrl\"\n          onChange={this.handleChange}\n          errors={errors.imgUrl}\n        />\n        <Input\n          id=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"Enter imdbUrl\"\n          name=\"imdbUrl\"\n          onChange={this.handleChange}\n          errors={errors.imdbUrl}\n        />\n        <Input\n          id=\"imdbId\"\n          value={imdbId}\n          placeholder=\"Enter imdbId\"\n          name=\"imdbId\"\n          onChange={this.handleChange}\n          errors={errors.imdbId}\n        />\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-link\"\n          >\n            Add Movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}